{"ast":null,"code":"var _jsxFileName = \"C:\\\\rampage\\\\front\\\\src\\\\UsersList.js\";\nimport React, { useState } from 'react';\nimport UserTable from './UserTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UsersList() {\n  // const [loading, setLoading] = useState(false); // Estado para controlar o carregamento dos dados\n  // const [error, setError] = useState(null); // Estado para armazenar erros, se houver\n  // const [users, setUsers] = useState([]); // Estado para armazenar os usuários\n\n  // // Função para buscar usuários na API\n  // const fetchUsers = async () => {\n  //     setLoading(true); // Inicia o estado de carregamento\n  //     try {\n  //         const response = await fetch('http://localhost:8080/auth/listarUsuarios');\n  //         if (!response.ok) {\n  //             throw new Error('Erro ao buscar usuários');\n  //         }\n  //         const data = await response.json();\n  //         setUsers(data); // Armazena os usuários recebidos\n  //     } catch (error) {\n  //         setError('Erro ao buscar usuários.');\n  //         console.error('Erro ao buscar usuários:', error);\n  //     } finally {\n  //         setLoading(false); // Termina o estado de carregamento\n  //     }\n  // };\n\n  // // Função chamada ao clicar no botão \"Listar Usuários\"\n  // const handleListUsers = () => {\n  //     fetchUsers(); // Busca os dados dos usuários\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando usu\\xE1rios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this), !loading && !error && /*#__PURE__*/_jsxDEV(UserTable, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 36\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","UserTable","jsxDEV","_jsxDEV","UsersList","children","fileName","_jsxFileName","lineNumber","columnNumber","loading","error","className","users","_c","$RefreshReg$"],"sources":["C:/rampage/front/src/UsersList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport UserTable from './UserTable';\r\n\r\nfunction UsersList(){\r\n\r\n    // const [loading, setLoading] = useState(false); // Estado para controlar o carregamento dos dados\r\n    // const [error, setError] = useState(null); // Estado para armazenar erros, se houver\r\n    // const [users, setUsers] = useState([]); // Estado para armazenar os usuários\r\n\r\n    // // Função para buscar usuários na API\r\n    // const fetchUsers = async () => {\r\n    //     setLoading(true); // Inicia o estado de carregamento\r\n    //     try {\r\n    //         const response = await fetch('http://localhost:8080/auth/listarUsuarios');\r\n    //         if (!response.ok) {\r\n    //             throw new Error('Erro ao buscar usuários');\r\n    //         }\r\n    //         const data = await response.json();\r\n    //         setUsers(data); // Armazena os usuários recebidos\r\n    //     } catch (error) {\r\n    //         setError('Erro ao buscar usuários.');\r\n    //         console.error('Erro ao buscar usuários:', error);\r\n    //     } finally {\r\n    //         setLoading(false); // Termina o estado de carregamento\r\n    //     }\r\n    // };\r\n\r\n    // // Função chamada ao clicar no botão \"Listar Usuários\"\r\n    // const handleListUsers = () => {\r\n    //     fetchUsers(); // Busca os dados dos usuários\r\n    // };\r\n\r\n    return(\r\n        <div>\r\n            <h2>Lista de Usuários</h2>\r\n            {loading && <p>Carregando usuários...</p>}\r\n            {error && <p className=\"error\">{error}</p>}\r\n            {!loading && !error && <UserTable users={users} />} {/* Passa a lista de usuários para UserTable */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAA,EAAE;EAEhB;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBC,OAAO,iBAAIP,OAAA;MAAAE,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACxCE,KAAK,iBAAIR,OAAA;MAAGS,SAAS,EAAC,OAAO;MAAAP,QAAA,EAAEM;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzC,CAACC,OAAO,IAAI,CAACC,KAAK,iBAAIR,OAAA,CAACF,SAAS;MAACY,KAAK,EAAEA;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEd;AAACK,EAAA,GArCQV,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}